apiVersion: apps/v1
kind: Deployment
metadata:
  name: easybank-app
  labels:
    app: easybank-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: easybank-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: easybank-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
      - name: easybank-app
        image: 217281135028.dkr.ecr.us-west-2.amazonaws.com/easybank-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: easybank-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: easybank-secrets
              key: db-username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: easybank-secrets
              key: db-password
        - name: SPRING_REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: easybank-config
              key: redis-host
        - name: SPRING_REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: easybank-config
              key: redis-port
        - name: MAX_REQUESTS_PER_MINUTE
          value: "600"
        - name: MAX_TRANSACTIONS_PER_MINUTE
          value: "100"
        - name: RETRY_AFTER_SECONDS
          value: "30"
        - name: JAVA_OPTS
          value: "-Xms128m -Xmx256m -XX:+UseG1GC -Dspring.profiles.active=production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "384Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
      imagePullSecrets:
      - name: aws-registry 